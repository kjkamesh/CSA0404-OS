#include <stdio.h>
#include <pthread.h>
#include <semaphore.h>

#define READERS_COUNT 5
#define WRITERS_COUNT 2

sem_t mutex, wrt;
int readCount = 0;

void *reader(void *arg) {
    while (1) {
        sem_wait(&mutex);
        readCount++;
        if (readCount == 1)
            sem_wait(&wrt);
        sem_post(&mutex);
        printf("Reading...\n");
        sem_wait(&mutex);
        readCount--;
        if (readCount == 0)
            sem_post(&wrt);
        sem_post(&mutex);
    }
}

void *writer(void *arg) {
    while (1) {
        sem_wait(&wrt);
        printf("Writing...\n");
        sem_post(&wrt);
    }
}

int main() {
    pthread_t readers[READERS_COUNT], writers[WRITERS_COUNT];
    sem_init(&mutex, 0, 1);
    sem_init(&wrt, 0, 1);
    for (int i = 0; i < READERS_COUNT; i++)
        pthread_create(&readers[i], NULL, reader, NULL);
    for (int i = 0; i < WRITERS_COUNT; i++)
        pthread_create(&writers[i], NULL, writer, NULL);
    for (int i = 0; i < READERS_COUNT; i++)
        pthread_join(readers[i], NULL);
    for (int i = 0; i < WRITERS_COUNT; i++)
        pthread_join(writers[i], NULL);
    sem_destroy(&mutex);
    sem_destroy(&wrt);
    return 0;
}
