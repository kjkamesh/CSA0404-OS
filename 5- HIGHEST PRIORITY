#include <stdio.h>

// Structure to represent a process
struct Process {
    int processID;
    int priority;
};

// Function to find the process with the highest priority
int findHighestPriority(struct Process processes[], int n) {
    int highestPriorityIndex = 0;
    
    for (int i = 1; i < n; i++) {
        if (processes[i].priority > processes[highestPriorityIndex].priority) {
            highestPriorityIndex = i;
        }
    }

    return highestPriorityIndex;
}

int main() {
    int n;

    // Get the number of processes
    printf("Enter the number of processes: ");
    scanf("%d", &n);

    // Declare an array of processes
    struct Process processes[n];

    // Input process details
    for (int i = 0; i < n; i++) {
        printf("Enter details for Process %d:\n", i + 1);
        processes[i].processID = i + 1;
        printf("Enter priority for Process %d: ", i + 1);
        scanf("%d", &processes[i].priority);
    }

    // Find and execute the process with the highest priority
    int highestPriorityIndex = findHighestPriority(processes, n);
    printf("\nProcess %d with priority %d is selected to execute next.\n",
           processes[highestPriorityIndex].processID,
           processes[highestPriorityIndex].priority);

    return 0;
}
