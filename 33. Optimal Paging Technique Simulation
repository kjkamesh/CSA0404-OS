#include <stdio.h>

#define MAX_FRAMES 100

int pageFaultsOptimal(int referenceString[], int n, int capacity) {
    int frames[MAX_FRAMES];
    int nextUse[MAX_FRAMES];
    int i, j, k, pageFaults = 0;
    
    for (i = 0; i < capacity; i++) {
        frames[i] = -1; // Initialize all frames as empty
        nextUse[i] = -1; // Initialize next use as -1
    }
    
    for (i = 0; i < n; i++) {
        int flag = 0;
        
        // Check if page is already in frames
        for (j = 0; j < capacity; j++) {
            if (frames[j] == referenceString[i]) {
                flag = 1;
                break;
            }
        }
        
        if (flag == 0) {
            int pos = -1; // Position of page to be replaced
            
            // Check if any frame is empty
            for (j = 0; j < capacity; j++) {
                if (frames[j] == -1) {
                    pos = j;
                    break;
                }
            }
            if (pos == -1) {
                int farthest = i;
                for (j = 0; j < capacity; j++) {
                    int found = 0;
                    for (k = i + 1; k < n; k++) {
                        if (frames[j] == referenceString[k]) {
                            found = 1;
                            if (k > farthest) {
                                farthest = k;
                                pos = j;
                            }
                            break;
                        }
                    }
                    if (found == 0) {
                        pos = j;
                        break;
                    }
                }
            }
            
            frames[pos] = referenceString[i];
            pageFaults++;
        }
    }
    return pageFaults;
}

int main() {
    int referenceString[] = {7, 0, 1, 2, 0, 3, 0, 4, 2, 3, 0, 3, 2};
    int n = sizeof(referenceString) / sizeof(referenceString[0]);
    int capacity = 4;
    printf("Total Page Faults: %d\n", pageFaultsOptimal(referenceString, n, capacity));
    return 0;
}
